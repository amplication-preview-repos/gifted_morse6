/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SalesRole as PrismaSalesRole } from "@prisma/client";

export class SalesRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesRoleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesRole.count(args);
  }

  async salesRoles(
    args: Prisma.SalesRoleFindManyArgs
  ): Promise<PrismaSalesRole[]> {
    return this.prisma.salesRole.findMany(args);
  }
  async salesRole(
    args: Prisma.SalesRoleFindUniqueArgs
  ): Promise<PrismaSalesRole | null> {
    return this.prisma.salesRole.findUnique(args);
  }
  async createSalesRole(
    args: Prisma.SalesRoleCreateArgs
  ): Promise<PrismaSalesRole> {
    return this.prisma.salesRole.create(args);
  }
  async updateSalesRole(
    args: Prisma.SalesRoleUpdateArgs
  ): Promise<PrismaSalesRole> {
    return this.prisma.salesRole.update(args);
  }
  async deleteSalesRole(
    args: Prisma.SalesRoleDeleteArgs
  ): Promise<PrismaSalesRole> {
    return this.prisma.salesRole.delete(args);
  }
}
