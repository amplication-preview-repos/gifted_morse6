/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CustomerServiceRole as PrismaCustomerServiceRole,
} from "@prisma/client";

export class CustomerServiceRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomerServiceRoleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customerServiceRole.count(args);
  }

  async customerServiceRoles(
    args: Prisma.CustomerServiceRoleFindManyArgs
  ): Promise<PrismaCustomerServiceRole[]> {
    return this.prisma.customerServiceRole.findMany(args);
  }
  async customerServiceRole(
    args: Prisma.CustomerServiceRoleFindUniqueArgs
  ): Promise<PrismaCustomerServiceRole | null> {
    return this.prisma.customerServiceRole.findUnique(args);
  }
  async createCustomerServiceRole(
    args: Prisma.CustomerServiceRoleCreateArgs
  ): Promise<PrismaCustomerServiceRole> {
    return this.prisma.customerServiceRole.create(args);
  }
  async updateCustomerServiceRole(
    args: Prisma.CustomerServiceRoleUpdateArgs
  ): Promise<PrismaCustomerServiceRole> {
    return this.prisma.customerServiceRole.update(args);
  }
  async deleteCustomerServiceRole(
    args: Prisma.CustomerServiceRoleDeleteArgs
  ): Promise<PrismaCustomerServiceRole> {
    return this.prisma.customerServiceRole.delete(args);
  }
}
